// -------------------------------------------------------------------------------------------------
// <copyright file="DictionaryWriterProvider.cs" company="Starion Group S.A.">
//
//   Copyright 2022-2025 Starion Group S.A.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
//
// </copyright>
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// --------THIS IS AN AUTOMATICALLY GENERATED FILE. ANY MANUAL CHANGES WILL BE OVERWRITTEN!--------
// ------------------------------------------------------------------------------------------------

namespace SysML2.NET.Serializer.Dictionary.Core.DTO
{
    using System;
    using System.Collections.Generic;

    using SysML2.NET.Common;

    /// <summary>
    /// Delegate provider for the appropriate Write method to convert a <see cref="Type" /> to
    /// a Dictionary
    /// </summary>
    internal static class DictionaryWriterProvider
    {
        private static readonly Dictionary<System.Type, Func<IData, DictionaryKind, Dictionary<string, object>>> DictionaryWriterFuncMap = new Dictionary<System.Type, Func<IData, DictionaryKind, Dictionary<string, object>>>
        {
            {{#each this as | eClass |}}
            { typeof(SysML2.NET.Core.DTO.{{ eClass.Name }}), {{ eClass.Name }}DictionaryWriter.Write },
            {{/each}}
        };

        /// <summary>
        /// Provides the delegate <see cref="Func{IData, DictionaryKind, Dictionary{String, Object}}"/> for the
        /// <see cref="System.Type"/> that is to be serialized
        /// </summary>
        /// <param name="type">
        /// The subject <see cref="System.Type"/> that is to be serialized
        /// </param>
        /// <returns>
        /// A Delegate of <see cref="Func{IData, DictionaryKind, Dictionary{String, Object}}"/>
        /// </returns>
        /// <exception cref="NotSupportedException">
        /// Thrown when the <see cref="System.Type"/> is not supported.
        /// </exception>
        internal static Func<IData, DictionaryKind, Dictionary<string, object>> Provide(System.Type type)
        {
            if (!DictionaryWriterFuncMap.TryGetValue(type, out var func))
            {
                throw new NotSupportedException($"The {type.Name} is not supported by the DictionaryWriterProvider.");
            }

            return func;
        }

        /// <summary>
        /// Asserts whether the <paramref name="type"/> is supported by the provider
        /// </summary>
        /// <param name="typeName">
        /// The name of the subject <see cref="System.Type"/> for which support is asserted
        /// </param>
        /// <returns></returns>
        internal static bool IsTypeSupported(System.Type type)
        {
            return DictionaryWriterFuncMap.ContainsKey(type);
        }
    }
}

// ------------------------------------------------------------------------------------------------
// --------THIS IS AN AUTOMATICALLY GENERATED FILE. ANY MANUAL CHANGES WILL BE OVERWRITTEN!--------
// ------------------------------------------------------------------------------------------------
